@page "/admin/editmovie/{id:long}"
@using MovieWebsite.Models
@layout AdminLayout
@inject IMovieRepository MovieRepository
@inject NavigationManager NavigationManager

<h3>Chỉnh sửa thông tin Phim</h3>

@if (movie == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <EditForm Model="movie" OnValidSubmit="HandleValidSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="form-group">
            <label for="Title">Tên phim</label>
            <InputText id="Title" class="form-control" @bind-Value="movie.Title" />
        </div>

        <div class="form-group">
            <label for="PosterURL">URL Poster</label>
            <InputText id="PosterURL" class="form-control" @bind-Value="movie.PosterURL" />
        </div>

        @* <div class="form-group">
            <label for="Country">Quốc Gia</label>
            <InputText id="Country" class="form-control" @bind-Value="movie.Country" />
        </div> *@

        <div class="form-group">
            <label for="ReleaseDate">Ngày phát hành</label>
            <InputDate id="ReleaseDate" class="form-control" @bind-Value="movie.ReleaseDate" />
        </div>

        <!-- Các trường khác của Movie -->

        <button type="submit" class="btn btn-primary">Lưu thay đổi</button>
        <button type="button" class="btn btn-secondary" @onclick="Cancel">Hủy</button>
    </EditForm>
}

@code {
    [Parameter]
    public long id { get; set; }

    private Movie movie;

    protected override async Task OnInitializedAsync()
    {
        movie = await MovieRepository.GetMovieByIdAsync(id);
    }

    private async Task HandleValidSubmit()
    {
        await MovieRepository.UpdateMovieAsync(movie);
        NavigationManager.NavigateTo("/admin/movies");
    }

    private void Cancel()
    {
        NavigationManager.NavigateTo("/admin/movies");
    }
}
