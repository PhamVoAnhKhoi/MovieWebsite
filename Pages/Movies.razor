@page "/"
@using MovieWebsite.Models
@inject IMovieRepository MovieService

<h3>Danh Sách Phim</h3>

@if (movies == null)
{
    <p><em>Đang tải dữ liệu...</em></p>
}
else if (!movies.Any())
{
    <p>Không tìm thấy phim nào.</p>
}
else
{
    <div class="container">
        <div class="row">
            @foreach (var movie in movies ?? Enumerable.Empty<Movie>())
            {
            <div class="col-md-2">
                    <a class="text-decoration-none" href="/moviedetail/@movie.MovieID">
                        <div class="card mb-4 shadow-sm text-dark fixed-height-card">
                            <img src="@movie.PosterURL" class="card-img-top fixed-height-img" alt="@movie.Title" />
                            <div class="card-body fixed-height-body">
                                <strong class="card-title">@movie.Title</strong>
                                <div class="d-flex justify-content-between align-items-center">
                                    <small class="text-muted">@movie.Director</small> 
                                </div>
                            </div>
                        </div>   
                    </a>
                </div>
            }          
        </div> 
    </div>
}
<style>
    .fixed-height-card {
        height: 100%; /* Đảm bảo thẻ card chiếm toàn bộ chiều cao của cột */
    }
    .fixed-height-body {
        height: 100px; /* Chiều cao cố định cho thẻ card-body */
        overflow: hidden; /* Đảm bảo nội dung không tràn ra ngoài */
    }
    .fixed-height-img {
        height: 150px; /* Chiều cao cố định cho hình ảnh */
        object-fit: cover; /* Đảm bảo hình ảnh được cắt để vừa với thẻ img */
    }
</style>
@code {
    private IEnumerable<Movie> movies;

    protected override async Task OnInitializedAsync()
    {
        movies = await MovieService.GetAllMoviesAsync();
    }

    private void ViewDetails(long movieId)
    {
        // Điều hướng đến trang chi tiết phim (sẽ được triển khai sau)
        NavigationManager.NavigateTo($"/movies/{movieId}");
    }

    [Inject]
    private NavigationManager NavigationManager { get; set; }
}
