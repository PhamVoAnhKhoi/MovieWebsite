@* @page "/search"
@using MovieWebsite.Models
@inject IMovieReference MovieReference
@inject NavigationManager NavigationManager

<h3>Kết Quả Tìm Kiếm</h3>
<div class="container">
    <div class="row">
        @if (movies == null)
        {
            <p><em>Loading...</em></p>
        }
        else
        {
            @foreach (var movie in movies)
            {
                <div class="col-md-2">
                    <a class="text-decoration-none">
                        <div class="card mb-4 shadow-sm text-dark fixed-height-card">
                            <img src="@movie.MovieImage" class="card-img-top fixed-height-img" alt="@movie.Title" />
                            <div class="card-body fixed-height-body">
                                <strong class="card-title">@movie.Title</strong>
                                <div class="d-flex justify-content-between align-items-center">
                                    <small class="text-muted">@movie.ReleaseYear</small>
                                </div>
                            </div>
                        </div>
                    </a>
                </div>
            }
        }
    </div>
</div>

<style>
    .fixed-height-card {
        height: 100%; /* Đảm bảo thẻ card chiếm toàn bộ chiều cao của cột */
    }
    .fixed-height-body {
        height: 100px; /* Chiều cao cố định cho thẻ card-body */
        overflow: hidden; /* Đảm bảo nội dung không tràn ra ngoài */
    }
    .fixed-height-img {
        height: 150px; /* Chiều cao cố định cho hình ảnh */
        object-fit: cover; /* Đảm bảo hình ảnh được cắt để vừa với thẻ img */
    }
</style>

@code {
    private IEnumerable<Movie> movies;
    [Parameter]
    [SupplyParameterFromQuery]
    public string SearchTerm { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await LoadMoviesAsync();
    }

    protected override async Task OnParametersSetAsync()
    {
        await LoadMoviesAsync();
    }

    private async Task LoadMoviesAsync()
    {
        if (!string.IsNullOrEmpty(SearchTerm))
        {
            movies = await MovieReference.SearchMoviesAsync(SearchTerm);
        }
        else
        {
            movies = await MovieReference.GetAllMoviesAsync();
        }
    }
} *@
